classDiagram
direction TB
class ITradeDataProvider {
  <<interface>>
  + GetTradeData(stream: Stream): List
}
class ITradeParser {
  <<interface>>
  + Parse(lines: List): List
}
class ITradeStorage {
  <<interface>>
  + Persist(trades: List): string
}
class IDatabaseRepository {
  <<interface>>
  + ClearAllTrades(): void
  + InsertTrade(trade: TradeRecord): void
  + InsertTrades(trades: List): void
  + GetAllTrades(): List
  + GetTradeCount(): int
}

class TradeDataProvider {
  + GetTradeData(stream: Stream): List
}
class TradeParser {
  - LotSize: float
  + Parse(lines: List): List
  - MapTradeDataToTradeRecord(fields: List): TradeRecord
  - ValidateTradeData(fields: List, currentLine: int): bool
}
class TradeStorage {
  - _databaseRepository: IDatabaseRepository
  + TradeStorage(databaseRepository: IDatabaseRepository)
  + Persist(trades: List): string
}
class DatabaseRepository {
  - databasePath: string
  + DatabaseRepository(databasePath: string)
  + ClearAllTrades(): void
  + InsertTrade(trade: TradeRecord): void
  + InsertTrades(trades: List): void
  + GetAllTrades(): List
  + GetTradeCount(): int
}
class TradeProcessor {
  - _tradeDataProvider: ITradeDataProvider
  - _tradeParser: ITradeParser
  - _tradeStorage: ITradeStorage
  + TradeProcessor(parser: ITradeParser, storage: ITradeStorage, dataProvider: ITradeDataProvider)
  + ProcessTrades(stream: Stream): void
}
class TradeRecord {
  + Id: int
  + SourceCurrency: string
  + DestinationCurrency: string
  + Lots: float
  + Price: decimal
}

ITradeDataProvider <|.. TradeDataProvider
ITradeParser <|.. TradeParser
ITradeStorage <|.. TradeStorage
IDatabaseRepository <|.. DatabaseRepository

TradeProcessor --> ITradeDataProvider
TradeProcessor --> ITradeParser
TradeProcessor --> ITradeStorage
TradeStorage --> IDatabaseRepository

TradeParser --> TradeRecord
TradeStorage --> TradeRecord
DatabaseRepository --> TradeRecord
TradeProcessor --> TradeRecord

